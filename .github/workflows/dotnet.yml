name: .NET Build and Pack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-and-pack:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore Cop.sln

    - name: Build
      run: dotnet build Cop.sln --no-restore --configuration Release

    - name: Test
      run: dotnet test Cop.sln --no-build --verbosity normal --configuration Release

    - name: Pack NuGet Package
      run: |
        $env:VERSION = "1.0.${{ github.run_number }}-${{ github.sha }}"
        dotnet pack ./Api/Api.csproj --configuration Release -p:PackageVersion=$env:VERSION -o ./nupkgs
        dotnet pack ./Processor/Processor.csproj --configuration Release -p:PackageVersion=$env:VERSION -o ./nupkgs

    - name: Upload NuGet Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./nupkgs/*.nupkg
       
  publish:
    runs-on: windows-latest
    needs: build-and-pack
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Download all packages
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./nupkgs
    - name: Publish NuGet packages to nuget.org
      run: |
        $packages = Get-ChildItem ./nupkgs/*.nupkg
        foreach ($package in $packages) {
          Write-Host "Publishing package: $($package.Name)"
          dotnet nuget push $package.FullName --api-key ${{ secrets.BneGames_Package_Publish }} --source "https://api.nuget.org/v3/index.json" --skip-duplicate
        }